from flask import Flask, request
from flask_sslify import SSLify
from telebot import types
import requests
import telebot
import random
import sqlite3 as sql
import base64

token = '5141156955:AAFdRpLdzn7vESVJ10aYn5B-hzwMxmL5hIA'
sign = "üö´"
#for imgdb
key = "f7de424a94c063e10998757ceac68ab5"

# app = Flask(__name__)
# sslify = SSLify(app)
#
# url = 'https://ZFreeX.pythonanywhere.com'
#
bot = telebot.TeleBot(token, threaded=False)
bot.remove_webhook()
# bot.set_webhook(url=url)

#
# @app.route('/', methods=['POST'])
# def webhook():
#     update = telebot.types.Update.de_json(request.stream.read().decode('utf-8'))
#     bot.process_new_updates([update])
#     return 'ok', 200
#
# @app.route('/', methods=['GET'])
# def fuck():
#     return "–∫—É–¥–∞ —Ç—ã –ª–µ–∑–µ—à—å?)", 200


@bot.callback_query_handler(func=lambda call: True)
def callback_worker(call):
    data = str(call.data)
    id = int(data[data.find('_')+1:])
    con = sql.connect("linder.db")
    cur = con.cursor()
    #mode = 0 => closed profile
    cur.execute("CREATE TABLE IF NOT EXISTS `users`(`id` INTEGER, `name` STRING, `username` STRING, `gender` STRING, `profile` STRING, `text` STRING, `photo` STRING, `likes` STRING, `macthes` STRING, `mode` INTEGER, `last` INTEGER)")
    cur.execute("SELECT * FROM `users`")
    rows = cur.fetchall()
    indb = False
    for row in rows:
        if row[0] == call.message.chat.id:
            indb = True


    if indb == False:
        cur.execute(f"INSERT INTO `users` VALUES('{call.message.chat.id}', 'üö´', '{call.message.chat.username}', 'üö´', 'üö´', 'üö´', 'üö´', '', '', '1', '1')")

    if data.startswith("start"):
        kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
        kb.row('üçì –õ–µ–Ω—Ç–∞', 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
        kb.row('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', 'üåÄ –û –±–æ—Ç–µ')
        kb.row('üèÜ –†–µ–π—Ç–∏–Ω–≥')
        text = "–∑–∞–ø–æ–º–∏–Ω–∞–π, –¥–µ—Ç–∫–∞\n" \
               "–õ–µ–Ω—Ç–∞ - –∞—Ä–µ–∞–ª –æ–±–∏—Ç–∞–Ω–∏—è —Ç–≤–æ–µ–≥–æ –∫—Ä–∞—à–∞.\n–∑–¥–µ—Å—å —Ç—ã –±—É–¥–µ—à—å —Å—Ç–∞–≤–∏—Ç—å –ª–∞–π–∫–∏ –∏ –ø–µ—Ä—Ñ–æ—Ä–∏—Ä–æ–≤–∞—Ç—å –≤–∑–≥–ª—è–¥–æ–º —Ñ–æ—Ç–∫–∏ –Ω–∞ –∞–Ω–∫–µ—Ç–∞—Ö.\n\n" \
               "–í —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ –Ω–µ –±—É–¥–µ—Ç —Å—Ä–µ–¥–Ω–µ–≥–æ —á–µ–∫–∞ –∑–∞ –∫–∞–∂–¥—É—é —Ç–≤–æ—é –ø—è—Ç–Ω–∏—Ü—É, –Ω–æ –∑–∞—Ç–æ —Å–≤–æ–∏ –ª–∞–π–∫–∏ –∏ –º—ç—Ç—á–∏ —Ç—ã —Ç–∞–º –Ω–∞–π–¥–µ—à—å\n\n" \
               "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ - –∏–º–µ–Ω–Ω–æ –≤ –Ω–∏—Ö —Ç—ã –±—É–¥–µ—à—å –∑–∞–≥—Ä—É–∂–∞—Ç—å —Å–≤–æ—é —Ñ–æ—Ç–∫—É —Å –≥—Ä—è–∑–Ω—ã–º –∑–µ—Ä–∫–∞–ª–æ–º\n–∏ –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –ª—é–±–∏–º—ã–π –ø—Ä–æ—Ñ–∏–ª—å 10–§–ò–õüòçü§§ü•∞ü•µüòã\n\n" \
               "–†–µ–π—Ç–∏–Ω–≥ - –Ω–µ –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–µ–∑–∂–∞—Ç—å –≤ —Å–æ–µ–¥–∏–Ω–µ–Ω–Ω—ã–µ —à—Ç–∞—Ç—ã –∏—Å—Ç–µ—Ä–∏–∫–∏, –µ—Å–ª–∏ —Ç—ã –Ω–µ —É–≤–∏–¥–∏—à—å —Å–≤–æ–µ –∏–º—è –≤ —ç—Ç–æ–º —Å–ø–∏—Å–∫–µ, —É —ç—Ç–∏—Ö –±–æ—Ç–æ–≤ –≤—Å–µ –∫—É–ø–ª–µ–Ω–æ"


        bot.send_message(call.message.chat.id, text, reply_markup=kb)
        bot.send_message(call.message.chat.id, "—Ç–æ–ø–∞–π –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏)")
    elif data.startswith("photo"):
        kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
        kb.row("‚ùå –û—Ç–º–µ–Ω–∞")
        bot.send_message(call.message.chat.id, "–æ—Ç–ø—Ä–∞–≤–ª—è–π —Ñ–æ—Ç–∫—É)", reply_markup=kb)
        bot.register_next_step_handler(call.message, get_photo)
    elif data.startswith("gender"):
        kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
        kb.row("üôé‚Äç‚ôÇÔ∏è –ü–∞—Ä–µ–Ω—å", "üôç‚Äç‚ôÄÔ∏è –î–µ–≤—É—à–∫–∞")
        kb.row("‚ùå –û—Ç–º–µ–Ω–∞")
        bot.send_message(call.message.chat.id, "choose ur", reply_markup=kb)
        bot.register_next_step_handler(call.message, get_gender)
    elif data.startswith("name"):
        kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
        kb.row("‚ùå –û—Ç–º–µ–Ω–∞")
        bot.send_message(call.message.chat.id, "–ø–∏—à–∏)\n\n–ª–∏–º–∏—Ç –Ω–∞ –±—É–∫–≤—ã: 30", reply_markup=kb)
        bot.register_next_step_handler(call.message, get_name)
    elif data.startswith("about"):
        kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
        kb.row("‚ùå –û—Ç–º–µ–Ω–∞")
        bot.send_message(call.message.chat.id, "–º—ã –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ —Ç–µ–±—è —Å–ª—É—à–∞–µ–º, 23-–ª–µ—Ç–Ω–∏–π –¥–∏–∑–∞–π–Ω–µ—Ä –∏–∑ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–∞)\n\n–ª–∏–º–∏—Ç –Ω–∞ –±—É–∫–≤—ã: 50", reply_markup=kb)
        bot.register_next_step_handler(call.message, get_about)
    elif data.startswith("profile"):
        kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
        kb.row("‚ùå –û—Ç–º–µ–Ω–∞")
        bot.send_message(call.message.chat.id, "", reply_markup=kb)
        bot.register_next_step_handler(call.message, get_about)

    con.commit()
    cur.close()

def get_about(msg):
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
    kb.row('üçì –õ–µ–Ω—Ç–∞', 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
    kb.row('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', 'üåÄ –û –±–æ—Ç–µ')
    kb.row('üèÜ –†–µ–π—Ç–∏–Ω–≥')
    con = sql.connect("linder.db")
    cur = con.cursor()
    if msg.text == "‚ùå –û—Ç–º–µ–Ω–∞":
        kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
        bot.send_message(msg.chat.id, "–≤–µ–ª–∫–∞–º –±—ç–∫", reply_markup=kb)
    text = msg.text[:51]
    cur.execute(f"UPDATE users SET text = '{text}' WHERE id = '{msg.from_user.id}'")
    con.commit()
    cur.close()
    bot.send_message(msg.chat.id, '–∞—Ç–∞–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ ‚úÖ', reply_markup=kb)




def get_name(msg):
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
    kb.row('üçì –õ–µ–Ω—Ç–∞', 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
    kb.row('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', 'üåÄ –û –±–æ—Ç–µ')
    kb.row('üèÜ –†–µ–π—Ç–∏–Ω–≥')
    con = sql.connect("linder.db")
    cur = con.cursor()
    if msg.text == "‚ùå –û—Ç–º–µ–Ω–∞":
        kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
        bot.send_message(msg.chat.id, "–≤–µ–ª–∫–∞–º –±—ç–∫", reply_markup=kb)
    name = msg.text[:31]
    cur.execute(f"UPDATE users SET name = '{name}' WHERE id = '{msg.from_user.id}'")
    con.commit()
    cur.close()
    bot.send_message(msg.chat.id, '–∫–∞–∫ —Å–∫–∞–∂–µ—à—å ‚úÖ', reply_markup=kb)


def get_gender(msg):
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
    kb.row('üçì –õ–µ–Ω—Ç–∞', 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
    kb.row('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', 'üåÄ –û –±–æ—Ç–µ')
    kb.row('üèÜ –†–µ–π—Ç–∏–Ω–≥')
    con = sql.connect("linder.db")
    cur = con.cursor()
    if msg.text == "‚ùå –û—Ç–º–µ–Ω–∞":
        kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
        bot.send_message(msg.chat.id, "–≤–µ–ª–∫–∞–º –±—ç–∫", reply_markup=kb)
    elif msg.text == "üôé‚Äç‚ôÇÔ∏è –ü–∞—Ä–µ–Ω—å":
        cur.execute(f"UPDATE users SET gender = '–ø–∞—Ä–µ–Ω—å' WHERE id = '{msg.from_user.id}'")
        bot.send_message(msg.chat.id, "–∞–ª—å—Ñ–∞—á –∑–∞–ø–∏—Å–∞–Ω ü•µ", reply_markup=kb)
    elif msg.text == "üôç‚Äç‚ôÄÔ∏è –î–µ–≤—É—à–∫–∞":
        cur.execute(f"UPDATE users SET gender = '–¥–µ–≤—É—à–∫–∞' WHERE id = '{msg.from_user.id}'")
        bot.send_message(msg.chat.id, "–ø—Ä–∏–Ω—Ü–µ—Å—Å–∞ –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–∞ ü•µ", reply_markup=kb)
    con.commit()
    cur.close()




def get_photo(msg):
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
    kb.row('üçì –õ–µ–Ω—Ç–∞', 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
    kb.row('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', 'üåÄ –û –±–æ—Ç–µ')
    kb.row('üèÜ –†–µ–π—Ç–∏–Ω–≥')
    if msg.text == "‚ùå –û—Ç–º–µ–Ω–∞":
        kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
        bot.send_message(msg.chat.id, "–≤–µ–ª–∫–∞–º –±—ç–∫", reply_markup=kb)
    else:
        if msg.content_type != "photo":
            bot.send_message(msg.chat.id, "–∞ —Ñ–æ—Ç–∫–∞ –≥–¥–µ? ü§°", reply_markup=kb)
            return
        fileID = msg.photo[-1].file_id
        # print 'fileID =', fileID
        file_info = bot.get_file(fileID)
        # print 'file.file_path =', file_info.file_path
        downloaded_file = bot.download_file(file_info.file_path)
        id = msg.from_user.id
        with open("{}.jpg".format(id), 'wb') as new_file:
            new_file.write(downloaded_file)
        fr = open("{}.jpg".format(id), "rb")
        res = requests.post("https://api.imgbb.com/1/upload", {"image":  base64.b64encode(fr.read()), "key": key})
        res = res.json()
        print(res['data']['url'])
        con = sql.connect("linder.db")
        cur = con.cursor()
        cur.execute(f"UPDATE users SET photo = '{res['data']['url']}' WHERE id = '{id}'")
        con.commit()
        cur.close()
        bot.send_message(msg.chat.id, "–ø–∏–∫—á–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ ‚úÖ", reply_markup=kb)










@bot.message_handler(commands=['start'])
def start_message(message):
    text = "–æ–æ–æ–æ–æ–æ–æ–æ, –≤—ã –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ!! –∫—Ç–æ –∫ –Ω–∞–º –ø—Ä–∏—à–µ–µ–µ–µ–µ–ª!!" \
           "\n\n–∞ —á–µ —Ç—ã —Ç—É—Ç –∑–∞–±—ã–ª? —Ç—ã –≤ –∫—É—Ä—Å–µ –≤–æ–æ–±—â–µ, <b>–∫—É–¥–∞ —Ç—ã –ø–æ–ø–∞–ª?</b>\n\n<i>–ª–∞–¥–Ω–æ, –≤–∞—Ñ–ª—è, –¥–∞–≤–∞–π –±–µ–∑ –ø—Ä–µ–¥–∏—Å–ª–æ–≤–∏–π</i>\n\n " \
           "–∫–æ—Ä–æ—á–µ, —Ç—ã —Å–µ–π—á–∞—Å –≤ –ª—É—á—à–µ–º –±–æ—Ç–µ –ø–ª–∞–Ω–µ—Ç—ã, –ø–ª–∞–≥–∏–∞—Ç–∞–º–∏ –∫–æ—Ç–æ—Ä–æ–≥–æ —è–≤–ª—è—é—Ç—Å—è —Ç–∏–Ω–¥–µ—Ä –∏ –±–∞–¥—É, " \
           "–∫–æ—à–º–∞—Ä–Ω—ã–π —Å–æ–Ω –ë–∏–ª–ª–∞ –ì–µ–π—Å—Ç–∞, —ç–≥–æ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ü–∞—Ä–∞–ø–∞–µ—Ç –æ–±—à–∏–≤–∫–∏ –æ—Ä–±–∏—Ç–∞–ª—å–Ω—ã—Ö —Å—Ç–∞–Ω—Ü–∏–π –∏ –¥–∞–ª—å—à–µ –ø–æ —Å–ø–∏—Å–∫—É.\n\n" \
           "–≤–µ—â–∏, –∫–æ—Ç–æ—Ä—ã–µ —É —Ç–µ–±—è –ø–æ—è–≤—è—Ç—Å—è –∑–¥–µ—Å—å:\n\nüí¶ <b>–¥—Ä—É–∑—å—è</b> üí¶\n\n–¥–∞, –∏ —Ç–∞–∫–æ–µ —Ç–æ–∂–µ –±—ã–≤–∞–µ—Ç. " \
           "–Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ –∑–¥–µ—Å—å –ø—Ä–æ—Å—Ç–æ —Å–ø–∞–≤–Ω —Ç–≤–æ–∏—Ö –±—É–¥—É—â–∏—Ö –∫–µ–Ω—Ç–æ–≤ –∏ –ø–æ–¥—Ä—É–∂–µ–∫." \
           "\n\n‚ú® <b>—Å–≤—è–∑–∏</b> ‚ú®\n\n–∏ –¥–∞–∂–µ –Ω–µ–π—Ä–æ–Ω–Ω—ã–µ - –¥–≤–µ –∫–Ω–æ–ø–∫–∏ —Ç—ã–∫–∞—Ç—å –±—É–¥–µ—à—å –≤—Å–µ-—Ç–∞–∫–∏\n\n" \
           "üî• <b>–ø–∞—Ä–∞ –Ω–∞ –≤–∞–ª—å—Å</b> üî•\n\n–Ω—É —Ç—É—Ç –≤–æ–æ–±—â–µ –Ω–µ—Ç —Å–ª–æ–≤, –¥–∞?\n\n<i>–≤—Å–µ, —Ö–≤–∞—Ç–∏—Ç –∂–¥–∞—Ç—å, –≥–æ –¥–µ–ª–∞—Ç—å –∏–∑ —Ç–≤–æ–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è –∫–æ–Ω—Ñ–µ—Ç–∫—É</i> üëá"
    kb = types.InlineKeyboardMarkup()
    kb.add(types.InlineKeyboardButton(text="—Ö–æ—á—É —Ö–æ—á—É —Ö–æ—á—É üòç", callback_data="start_{}".format(message.from_user.id)))
    bot.send_message(message.chat.id, text, reply_markup=kb, parse_mode="HTML")

@bot.message_handler(commands=['menu'])
def start_message(message):
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
    kb.row('üçì –õ–µ–Ω—Ç–∞', 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
    kb.row('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', 'üåÄ –û –±–æ—Ç–µ')
    kb.row('üèÜ –†–µ–π—Ç–∏–Ω–≥')
    bot.send_message(message.chat.id, "—Ç—ã –≤ –≥–ª–∞–≤–Ω–æ–ºü§ô", reply_markup=kb)


@bot.message_handler(content_types=['text'])
def start_message(msg):
    if msg.text == "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏":
        con = sql.connect("linder.db")
        cur = con.cursor()
        cur.execute("SELECT * FROM `users`")
        rows = cur.fetchall()
        for row in rows:
            if row[0] == msg.from_user.id:
                text = f"<b>üîÆ –ò–º—è:</b> {row[1]}\n<b>üë§ –ü–æ–ª: </b>{row[3]}\n<b>üçí –ü—Ä–æ—Ñ–∏–ª—å: </b>{row[4]}\n\n"
                if row[5] != sign:
                    text += row[5]
                kb = types.InlineKeyboardMarkup()
                kb.add(types.InlineKeyboardButton(text="–§–æ—Ç–æ üåÖ", callback_data="photo_{}".format(msg.from_user.id)))
                kb.add(types.InlineKeyboardButton(text="–ò–º—è üìù", callback_data="name_{}".format(msg.from_user.id)))
                kb.add(types.InlineKeyboardButton(text="–ü—Ä–æ—Ñ–∏–ª—å üç≠", callback_data="profile_{}".format(msg.from_user.id)))
                kb.add(types.InlineKeyboardButton(text="–ü–æ–ª üß¨", callback_data="gender_{}".format(msg.from_user.id)))
                kb.add(types.InlineKeyboardButton(text="–û —Å–µ–±–µ üéà", callback_data="about_{}".format(msg.from_user.id)))
                if row[6] != sign:
                    bot.send_photo(msg.chat.id, row[6], caption=text, reply_markup=kb, parse_mode="HTML")
                else:
                    bot.send_message(msg.chat.id, text, parse_mode="HTML", reply_markup=kb)
                break
        con.commit()
        cur.close()
    elif msg.text == "üçì –õ–µ–Ω—Ç–∞":
        con = sql.connect("linder.db")
        cur = con.cursor()
        cur.execute("SELECT * FROM users")
        rows = cur.fetchall()
        start = 1
        for row in rows:
            if row[0] == msg.from_user.id:
                pass
                """
                start = row[10]
        row = rows[start]
        text = f"<b>üîÆ –ò–º—è:</b> {row[1]}\n<b>üë§ –ü–æ–ª: </b>{row[3]}\n<b>üçí –ü—Ä–æ—Ñ–∏–ª—å: </b>{row[4]}\n\n"
        if row[5] != sign:
            text += row[5]
        kb = types.InlineKeyboardMarkup(row_width=3)
        kb.add(types.InlineKeyboardButton(text="‚óÄÔ∏è", callback_data="left_{}".format(msg.from_user.id)))
        kb.add(types.InlineKeyboardButton(text="‚ù§Ô∏è", callback_data="like_{}".format(msg.from_user.id)))
        kb.add(types.InlineKeyboardButton(text="‚ñ∂Ô∏èÔ∏è", callback_data="right_{}".format(msg.from_user.id)))
        bot.send_message(msg.chat.id, text, reply_markup=kb)
        """

print("started")
bot.polling()