import telebot 

from bd import *
from kboard import *
import time


TOKEN = "1621900333:AAHXAQiX9VYlSkFrGr_C1EM-fEi8hRX4Tqk"
admin_id = 472430201

bot = telebot.TeleBot(TOKEN)



# –ù–∞—Ç–∞—Ç–∫—ñ —û –±—É–¥—É—á—ã–Ω—é
# –î–∞–¥–∞—Ü—å –º–∞–≥—á—ã–º–∞—Å—Ü—å:
# 1. –≤—ã–¥–∞–ª—è—Ü—å –∫–∞—Ä—ã—Å—Ç–∞–ª—å–Ω—ñ–∫–∞—û
# 2. –∑–∞–±—ñ—Ä–∞—Ü—å –∞–¥–º—ñ–Ω–∞
# 3. —É—Å–µ –∫–∞–ª—ñ, –∑–≤—è–∑–∞–Ω—ã—è –∑ –∞–¥–º—ñ–Ω–∞–º, –º–æ–∂–Ω–∞ –∑–∞–Ω–µ—Å—Ü—ñ –ø–∞–¥ –∞–¥–∑—ñ–Ω if
# 4. 





try:
    bot.send_message(admin_id, "–Ø –∑–Ω–æ—û –ø—Ä–∞—Ü—É—é")
except:
    pass


def admin_check_quest(message,id,start):
    if message.text in "yY":
        change_checked(id,start)
        bot.send_message(message.chat.id,"–ì—ç—Ç–∞—è –ø—Ä–∞—Ü–∞ –ø—Ä–∞–π—à–ª–∞ –º–∞–¥—ç—Ä–∞—Ü—ã—é —ñ —á–∞–ª–∞–≤–µ–∫ –∞—Ç—Ä—ã–º–∞—û –∑–∞ —è–µ –±–∞–ª—ã")
    else:
        bot.send_message(message.chat.id,"–ì—ç—Ç–∞—è –ø—Ä–∞—Ü–∞ –Ω–µ –ø—Ä–∞–π—à–ª–∞ –º–∞–¥—ç—Ä–∞—Ü—ã—é —ñ –≤—è—Ä—Ç–∞–µ—Ü—Ü–∞ —û —Å–ø—ñ—Å")

# def get_profile_str(id):
#     result = "–í–∞—à –ø—Ä–æ—Ñ—ñ–ª—å üë§:" + "\n" + "\n"
#     user = get_user(id)
#     result += "–í–∞—à id: " + str(user[0]) + "\n"
#     result += "–í–∞—à–∞–µ —ñ–º—è: " + user[3] + "\n"
#     result += "–í–∞—à –∫–ª–∞—Å: " + user[2] + "\n"
#     result += "–£ –í–∞—Å –±–∞–ª–∞—û: " + str(user[4]) + "\n"
#     result += "–í–∞—à—ã—è —Å–∞—Ü—ã—è–ª—å–Ω—ã—è —Å–µ—Ç–∫—ñ: " + user[5] + "\n"*4 
#     result += "–ö–∞–ª—ñ –í—ã –∑—Ä–∞–±—ñ–ª—ñ –ø–∞–º—ã–ª–∫—É –ø–∞–¥—á–∞—Å —Ä—ç–≥—ñ—Å—Ç—Ä–∞—Ü—ã—ñ —Ü—ñ —û –í–∞—Å –∑'—è–≤—ñ–ª—ñ—Å—è –ø—ã—Ç–∞–Ω–Ω—ñ, –Ω–∞—Ü—ñ—Å–Ω—ñ—Ü–µ /contacts"
#     return result

def ans_send_all_checker(message,text):
    if message.text in "yY":
        users = get_users()
        # print(users)
        for i in range(len(users)):
            try:
                bot.send_message(users[i][1],text)
            except:
                bot.send_message(admin_id, "–ß–∞–ª–∞–≤–µ–∫ –∑ –Ω–∞—Å—Ç—É–ø–Ω—ã–º id –Ω–µ –∞—Ç—Ä—ã–º–∞—û –ø–∞–≤–µ–¥–∞–º–ª–µ–Ω–Ω–µ, —è–∫–æ–µ –¥–ª—è —û—Å—ñ—Ö " + str(users[i][1]))
            time.sleep(1)
    else:
        bot.send_message(message.chat.id,"–í—ã —Å–∫–∞—Å–∞–≤–∞–ª—ñ –∞–¥–ø—Ä–∞—û–∫—É")

def ans_send_all(message):
    bot.send_message(message.chat.id, "–í—ã —û–ø—ç—û–Ω–µ–Ω—ã, —à—Ç–æ –∂–∞–¥–∞–µ—Ü–µ –¥–∞—Å–ª–∞—Ü—å —É—Å—ñ–º –Ω–∞—Å—Ç—É–ø–Ω—ã —Ç—ç–∫—Å—Ç(y/n): " + "\n"*3 + message.text)
    bot.register_next_step_handler(message, ans_send_all_checker, message.text)


def ans_add_points_2(message,list_of_id):
    reason = message.text
    bot.send_message(message.chat.id,"–Ø–∫—É—é –∫–æ–ª—å–∫–∞—Å—Ü—å –±–∞–ª–∞—û –¥–∞–¥–∞—Ü—å –ª—é–¥–∑—è–º –∑ id: " + str(list_of_id))
    bot.register_next_step_handler(message, ans_add_points_3,list_of_id,reason)

def ans_add_points_3(message,list_of_id,reason):
    score = int(message.text)

    for i in range(len(list_of_id)):
        add_points(list_of_id[i],score)
        try:
            bot.send_message(get_user_id(list_of_id[i])[1],"–í–∞—à–∞—è –∫–æ–ª—å–∫–∞—Å—Ü—å –±–∞–ª–∞—û –∑–º—è–Ω—ñ–ª–∞—Å—è. –í—ã –∞—Ç—Ä—ã–º–∞–ª—ñ " + str(score) + " –±–∞–ª(–∞—û)" + "\n" + "–í—ã –∞—Ç—Ä—ã–º–∞–ª—ñ –±–∞–ª—ã –∑–∞ " + reason)
            time.sleep(1)
        except:
            bot.send_message(admin_id, "–ß–∞–ª–∞–≤–µ–∫ –∑ –Ω–∞—Å—Ç—É–ø–Ω—ã–º id –Ω–µ –∞—Ç—Ä—ã–º–∞—û –ø–∞–≤–µ–¥–∞–º–ª–µ–Ω–Ω–µ –ø—Ä–∞ –±–∞–ª—ã " + str(list_of_id[i])[1])
    bot.send_message(message.chat.id,"–í—ã –¥–∞–¥–∞–ª—ñ "  + str(score) +  " –±–∞–ª–∞—û " + str(len(list_of_id)) +  " —É–¥–∑–µ–ª—å–Ω—ñ–∫–∞–º")


def ans_add_points(message):
    users_with_new_points = message.text.split()
    bot.send_message(message.chat.id,"–í—ã –∞—Ç—Ä—ã–º–∞–ª—ñ –±–∞–ª—ã –∑–∞  ... [–ê–î–ö–ê–ñ–´–¶–ï —Ç–∞–∫, –∫–∞–± –≥—ç—Ç—ã —Å–∫–∞–∑ –º–µ—û —Å—ç–Ω—Å!]" )
    bot.register_next_step_handler(message, ans_add_points_2, users_with_new_points)


def ans_quest(message):
    with open("quest.txt","w+", encoding="utf-8") as f:
        f.write(message.text)
    bot.send_message(message.chat.id,"–¢—ç–∫—Å—Ç –∑–º–µ–Ω–µ–Ω—ã")

def ans_admin(message):
    with open("timetable.txt","w+", encoding="utf-8") as f:
        f.write(message.text)
    bot.send_message(message.chat.id,"–¢—ç–∫—Å—Ç –∑–º–µ–Ω–µ–Ω—ã")

def ans_new_admin(message):
    id_of_new_admins = message.text.split()
    for i in range(len(id_of_new_admins)):
        if(len(get_user(id_of_new_admins[i]))):
            add_admin(id_of_new_admins[i])
        else:
            bot.send_message(message.chat.id,"–ù—è–º–∞ –∫–∞—Ä—ã—Å—Ç–∞–ª—å–Ω—ñ–∫–∞ –∑ id " + str(id_of_new_admins[i]))
    bot.send_message(message.chat.id,"–î–∞–¥–∞—û " + str(len(id_of_new_admins)) + " –∞–¥–º—ñ–Ω–∞—û")


def ans_links(message,name,form):
    links = message.text
    if len(links) > 1024:
        bot.send_message(message.chat.id,"–ö–æ–ª—å–∫–∞—Å—Ü—å —Å—ñ–º–≤–∞–ª–∞—û –∞–±–º–µ–∂–∞–≤–∞–Ω–∞ —û 1024. –ü–∞—á–Ω—ñ—Ü–µ –ø—Ä–∞—Ü—ç—Å —Ä—ç–≥—ñ—Å—Ç—Ä–∞—Ü—ã—ñ –∑–Ω–æ—û",reply_markup= kboard)
    else:
        add_user(message.chat.id,name,form,links,message.from_user.username)
        bot.send_message(message.chat.id,"–í—ñ–Ω—à—É–µ–º!ü•≥ –í—ã –ø–∞—Å–ø—è—Ö–æ–≤–∞ –∑–∞—Ä—ç–≥—ñ—Å—Ç—Ä–∞–≤–∞–Ω—ã!ü§ü",reply_markup=kboard_auth)
        bot.send_message(message.chat.id,get_profile_str(message.chat.id))

def ans_form(message,name):
    form = message.text
    if len(form) > 128:
        bot.send_message(message.chat.id,"–ö–æ–ª—å–∫–∞—Å—Ü—å —Å—ñ–º–≤–∞–ª–∞—û –∞–±–º–µ–∂–∞–≤–∞–Ω–∞ —û 128. –ü–∞—á–Ω—ñ—Ü–µ –ø—Ä–∞—Ü—ç—Å —Ä—ç–≥—ñ—Å—Ç—Ä–∞—Ü—ã—ñ –∑–Ω–æ—û",reply_markup=kboard)
    else:
        bot.send_message(message.chat.id,"–î–∞—à–ª—ñ—Ü–µ —Å–ø–∞—Å—ã–ª–∫—ñ –Ω–∞ –í–∞—à—ã—è —Å–∞—Ü—ã—è–ª—å–Ω—ã—è —Å–µ—Ç–∫—ñ(https://vk.com/tydzenrodnajmovy) –∞–ª—å–±–æ '-'")
        bot.register_next_step_handler(message, ans_links, name,form)

def ans_name(message):
    name = message.text
    if len(name) > 128:
        bot.send_message(message.chat.id,"–ö–æ–ª—å–∫–∞—Å—Ü—å —Å—ñ–º–≤–∞–ª–∞—û –∞–±–º–µ–∂–∞–≤–∞–Ω–∞ —û 128. –ü–∞—á–Ω—ñ—Ü–µ –ø—Ä–∞—Ü—ç—Å —Ä—ç–≥—ñ—Å—Ç—Ä–∞—Ü—ã—ñ –∑–Ω–æ—û",reply_markup=kboard)
    else:
        bot.send_message(message.chat.id,"–î–∞ —è–∫–æ–π –≥—Ä—É–ø—ã –í—ã –∞–¥–Ω–æ—Å—ñ—Ü–µ—Å—è? –ê–¥–∫–∞–∑–≤–∞–π—Ü–µ, –∫–∞–ª—ñ –ª–∞—Å–∫–∞, –Ω–∞—Å—Ç—É–ø–Ω—ã–º —á—ã–Ω–∞:" + "\n"*2 + "- –í—É—á–∞–Ω—å(10 –§—ñ–ª)" + "\n"+ "- –ù–∞—Å—Ç–∞—û–Ω—ñ—Ü–∞(–∫–∞—Ñ–µ–¥—Ä–∞ —ñ–Ω—Ñ–∞—Ä–º–∞—Ç—ã–∫—ñ)" + "\n"  + "- –í—ã–ø—É—Å–∫–Ω—ñ—Ü–∞(12 –ì—ñ—Å—Ç)")
        bot.register_next_step_handler(message, ans_form, name)





# –ü–ê–ß–ê–¢–ê–ö –†–ê–ë–û–¢–´ !!!
@bot.message_handler(commands= ['start'])
def start_cmd(message):
    if len(get_user(message.chat.id)):
        bot.send_message(message.chat.id,"–í—ñ—Ç–∞–µ–º!üëã" + "\n"*2 + "–ì—ç—Ç–∞ –±–æ—Ç –¢—ã–¥–Ω—è —Ä–æ–¥–Ω–∞–π –º–æ–≤—ã —û –õ—ñ—Ü—ç—ñ –ë–î–£. –¢—É—Ç–∞–∫–∞ –í—ã –º–æ–∂–∞—Ü–µ –¥–∞–≤–µ–¥–∞—Ü—Ü–∞ —Ä–∞—Å–∫–∞–ª–∞–¥ –∞–∫—Ç—ã—û–Ω–∞—Å—Ü—è—û –Ω–∞ —Å—ë–Ω–Ω—è –¥—ã –¥–∞—Å–ª–∞—Ü—å –≤–∞—à—ã—è –∞–¥–∫–∞–∑ –Ω–∞ —Ç—ç—Å—Ç—ã —ñ –∫–≤–µ—Å—Ç—ã." + "\n" +  "–ó–∞ –í–∞—à—É—é –¥–∑–µ–π–Ω–∞—Å—Ü—å –ø–∞–¥—á–∞—Å —Ç—ã–¥–Ω—è(–Ω–∞–≤–µ–¥–≤–∞–Ω–Ω–µ –º–µ—Ä–∞–ø—Ä—ã–µ–º—Å—Ç–≤, —É–¥–∑–µ–ª —É –∫–≤–µ—Å—Ç–∞—Ö —ñ –≥.–¥.) –í—ã –±—É–¥–∑–µ—Ü–µ –∞—Ç—Ä—ã–º–ª—ñ–≤–∞—Ü—å –±–∞–ª—ã, –∞ –ø–æ—Ç—ã–º —Å–∞–º—ã—è –∞–¥–¥–∞–Ω—ã—è –≥—ç—Ç–∞–π —Å–ø—Ä–∞–≤–µ –∞—Ç—Ä—ã–º–∞—é—Ü—å –∞–¥ –Ω–∞—Å –ø–∞–¥–∞—Ä—É–Ω–∫—ñ!üéÅ" + "\n"*2 + "–•—É—Ç—á—ç–π —Ü—ñ—Å–Ω—ñ—Ü–µ –†–≠–ì–Ü–°–¢–†–ê–¶–´–Ø, –∫–∞–± –ø—Ä—ã–Ω—è—Ü—å —É–¥–∑–µ–ª! "  + "–ü–æ—Å–ø–µ—Ö–∞—û!",reply_markup=kboard_auth)
    else:
        bot.send_message(message.chat.id,"–í—ñ—Ç–∞–µ–º!üëã" + "\n"*2 + "–ì—ç—Ç–∞ –±–æ—Ç –¢—ã–¥–Ω—è —Ä–æ–¥–Ω–∞–π –º–æ–≤—ã —û –õ—ñ—Ü—ç—ñ –ë–î–£. –¢—É—Ç–∞–∫–∞ –í—ã –º–æ–∂–∞—Ü–µ –¥–∞–≤–µ–¥–∞—Ü—Ü–∞ —Ä–∞—Å–∫–∞–ª–∞–¥ –∞–∫—Ç—ã—û–Ω–∞—Å—Ü—è—û –Ω–∞ —Å—ë–Ω–Ω—è –¥—ã –¥–∞—Å–ª–∞—Ü—å –≤–∞—à—ã—è –∞–¥–∫–∞–∑ –Ω–∞ —Ç—ç—Å—Ç—ã —ñ –∫–≤–µ—Å—Ç—ã." + "\n"  + "–ó–∞ –í–∞—à—É—é –¥–∑–µ–π–Ω–∞—Å—Ü—å –ø–∞–¥—á–∞—Å —Ç—ã–¥–Ω—è(–Ω–∞–≤–µ–¥–≤–∞–Ω–Ω–µ –º–µ—Ä–∞–ø—Ä—ã–µ–º—Å—Ç–≤, —É–¥–∑–µ–ª —É –∫–≤–µ—Å—Ç–∞—Ö —ñ –≥.–¥.) –í—ã –±—É–¥–∑–µ—Ü–µ –∞—Ç—Ä—ã–º–ª—ñ–≤–∞—Ü—å –±–∞–ª—ã, –∞ –ø–æ—Ç—ã–º —Å–∞–º—ã—è –∞–¥–¥–∞–Ω—ã—è –≥—ç—Ç–∞–π —Å–ø—Ä–∞–≤–µ –∞—Ç—Ä—ã–º–∞—é—Ü—å –∞–¥ –Ω–∞—Å –ø–∞–¥–∞—Ä—É–Ω–∫—ñ!üéÅ" + "\n"*2 + "–•—É—Ç—á—ç–π —Ü—ñ—Å–Ω—ñ—Ü–µ –†–≠–ì–Ü–°–¢–†–ê–¶–´–Ø, –∫–∞–± –ø—Ä—ã–Ω—è—Ü—å —É–¥–∑–µ–ª! " + "–ü–æ—Å–ø–µ—Ö–∞—û!",reply_markup=kboard)


@bot.message_handler(content_types= ['text'])
def send(message):
    text = message.text
    if(text == "–†—ç–≥—ñ—Å—Ç—Ä–∞—Ü—ã—è"):
        if(len(get_user(message.chat.id))):
            bot.send_message(message.chat.id,"–í—ã —û–∂–æ –ø—Ä–∞–π—à–ª—ñ –ø—Ä–∞—Ü—ç—Å —Ä—ç–≥—ñ—Å—Ç—Ä–∞—Ü—ã—ñ")
        else:
            bot.send_message(message.chat.id,"–£–≤—è–¥–∑—ñ—Ü–µ, –∫–∞–ª—ñ –ª–∞—Å–∫–∞, –í–∞—à–∞–µ –ø—Ä–æ–∑–≤—ñ—à—á–∞ —ñ —ñ–º—è:")
            bot.register_next_step_handler(message,ans_name)
    elif(text == "–†–∞—Å–∫–ª–∞–¥ –Ω–∞ —Å—ë–Ω–Ω—èüóì"):
        # print(message)
        # print()
        # print(message.from_user.username)
        try: 
            f = open("timetable.txt",encoding="utf-8")
            timetable = f.read()
            f.close()
            bot.send_message(message.chat.id,timetable)
        except:
            bot.send_message(message.chat.id,"–†–∞—Å–∫–ª–∞–¥ —Ö—É—Ç–∫–∞ –∑'—è–≤—ñ—Ü—Ü–∞")


    elif(text == "–ö–≤–µ—Å—Ç—ã, –∞–ø—ã—Ç–∞–Ω–∫—ñ –¥—ã —ñ–Ω—à—ã—è –ø—Ä—ã–≥–æ–¥—ãü§ü"):
        if(len(get_user(message.chat.id))):
            try: 
                f = open("quest.txt",encoding="utf-8")
                quest_text = f.read()
                f.close()
                bot.send_message(message.chat.id,quest_text,reply_markup=kboard_answer)
            except:
                bot.send_message(message.chat.id, "–°–ø—ñ—Å –∞–∫—Ç—ã—û–Ω–∞—Å—Ü—è—û —Ö—É—Ç–∫–∞ –∑'—è–≤—ñ—Ü—Ü–∞.",reply_markup=kboard_answer)
        else:
            bot.send_message(message.chat.id,"–ü—Ä–∞–π–¥–∑—ñ—Ü–µ —Å–ø–∞—á–∞—Ç–∫—É —Ä—ç–≥—ñ—Å—Ç—Ä–∞—Ü—ã—é")
        


    elif(text == "–í–∞—à –ø—Ä–æ—Ñ—ñ–ª—åüë§"):
        if len(get_user(message.chat.id)):
            bot.send_message(message.chat.id, get_profile_str(message.chat.id))
        else:
            bot.send_message(message.chat.id, "–í—ã —è—à—á—ç –Ω–µ –∑–∞—Ä—ç–≥—ñ—Å—Ç—Ä–∞–≤–∞–Ω—ã")


    elif(text == "/contacts"):
        if len(get_user(message.chat.id)):
            bot.send_message(message.chat.id, "–ö–∞–ª—ñ —û –≤–∞—Å –∑'—è–≤—ñ–ª–∞—Å—è –ø—ã—Ç–∞–Ω–Ω–µ, –ø—Ä–∞–±–ª–µ–º–∞ —Ü—ñ –∑–∞–ø—ã—Ç. –ö–∞–ª—ñ –ª–∞—Å–∫–∞, –∑–≤—è—Ä—Ç–∞–π—Ü–µ—Å—è –¥–∞ @vushauv",reply_markup=kboard_auth)
        else:
            bot.send_message(message.chat.id, "–ö–∞–ª—ñ —û –≤–∞—Å –∑'—è–≤—ñ–ª–∞—Å—è –ø—ã—Ç–∞–Ω–Ω–µ, –ø—Ä–∞–±–ª–µ–º–∞ —Ü—ñ –∑–∞–ø—ã—Ç. –ö–∞–ª—ñ –ª–∞—Å–∫–∞, –∑–≤—è—Ä—Ç–∞–π—Ü–µ—Å—è –¥–∞ @vushauv",reply_markup=kboard)
             
    elif(text == "add_points" and len(get_user(message.chat.id)) and (message.chat.id == admin_id or get_user(message.chat.id)[6] == 1)):
        bot.send_message(message.chat.id,"–£–≤—è–¥–∑—ñ—Ü–µ —Å–ø—ñ—Å —É—Å—ñ—Ö, –∫–∞–º—É –≤—ã –∂–∞–¥–∞–µ—Ü–µ –¥–∞–¥–∞—Ü—å –∞–¥–Ω–æ–ª—å–∫–∞–≤—É—é –∫–æ–ª—å–∫–∞—Å—Ü—å –±–∞–ª–∞—û")
        bot.register_next_step_handler(message,ans_add_points)

    elif(text == "add_admin" and len(get_user(message.chat.id)) and message.chat.id == admin_id):
        bot.send_message(message.chat.id,"–î–∞—à–ª—ñ –º–Ω–µ id –Ω–æ–≤—ã—Ö –∞–¥–º—ñ–Ω–∞—û")
        bot.register_next_step_handler(message,ans_new_admin)

    elif(text == "change_agenda" and len(get_user(message.chat.id)) and message.chat.id == admin_id):
        bot.send_message(message.chat.id,"–î–∞—à–ª—ñ –º–Ω–µ —Ç—ç–∫—Å—Ç —Ä–∞—Å–∫–ª–∞–¥—É –Ω–∞ —Å—ë–Ω–Ω—è")
        bot.register_next_step_handler(message,ans_admin)
    
    elif(text == "change_quest" and len(get_user(message.chat.id)) and message.chat.id == admin_id):
        bot.send_message(message.chat.id,"–î–∞—à–ª—ñ –º–Ω–µ —Ç—ç–∫—Å—Ç –∫–≤–µ—Å—Ç–∞—û –Ω–∞ —Å—ë–Ω–Ω—è")
        bot.register_next_step_handler(message,ans_quest)

    elif(text == "send_all" and len(get_user(message.chat.id)) and message.chat.id == admin_id):
        bot.send_message(message.chat.id,"–Ø–∫—ñ —Ç—ç–∫—Å—Ç –í—ã –∂–∞–¥–∞–µ—Ü–µ –¥–∞—Å–ª–∞—Ü—å —É—Å—ñ–º?")
        bot.register_next_step_handler(message,ans_send_all)

    elif(text == "get_kboard" and len(get_user(message.chat.id)) and (message.chat.id == admin_id or get_user(message.chat.id)[6] == 1)):
        bot.send_message(message.chat.id,"–í—ã –∞—Ç—Ä—ã–º–∞–ª—ñ –Ω–æ–≤—É—é –∫–ª–∞–≤—ñ—è—Ç—É—Ä—É", reply_markup=kboard_admin)

    elif(text == "work_with_quest" and len(get_user(message.chat.id)) and (message.chat.id == admin_id or get_user(message.chat.id)[6] == 1)):
        bot.send_message(message.chat.id, "–ù–µ –∞–ø—Ä–∞—Ü–æ–≤–∞–Ω—ã—Ö –∞–¥–∫–∞–∑–∞—û: " + str(len(get_quest_answer())))
        if len(get_quest_answer()):
            ans = get_quest_answer()[0]
            bot.send_message(message.chat.id,"–ê–¥–∫–∞–∑ –∞–¥: " + str(ans[5]) + "\n" +  "id:" + str(ans[0]) +  "\n" + "–ê—Ç—Ä—ã–º–∞–Ω—ã: " + str(ans[4]))
            bot.send_message(message.chat.id,"BEGIN")
            try:
                for i in range(ans[2],ans[3]):
                    try:
                        bot.forward_message(message.chat.id, ans[1], i)
                        time.sleep(0.1)
                    except:
                        pass 
                        # –ö–û–°–¢–´–õ–¨ !!!
                        # print("Trouble")
            except:
                bot.send_message(admin_id,"–ê–¥–∫–∞–∑ –±—ã—û –≤—ã–¥–∞–ª–µ–Ω—ã")
                bot.send_message(message.chat.id,"–ê–¥–∫–∞–∑ –±—ã—û –≤—ã–¥–∞–ª–µ–Ω—ã")

            bot.send_message(message.chat.id,"END")
            bot.send_message(message.chat.id,"–í—ã –ø—Ä–∞–≤–µ—Ä—ã–ª—ñ –≥—ç—Ç—É—é –ø—Ä–∞—Ü—É?(y/n)" + "\n"+"–ù–ï –ó–ê–ë–£–î–ó–¨–¶–ï–°–Ø –î–ê–î–ê–¶–¨ –ë–ê–õ–´!!!" + "\n" + "id = " + str(ans[0]))
            bot.register_next_step_handler(message,admin_check_quest,ans[0],ans[2])
        else:
            bot.send_message(message.chat.id,"–ù—è–º–∞ –∞–¥–∫–∞–∑–∞—û –Ω–∞ –∫–≤–µ—Å—Ç—ã")


    elif(text[0:7] == 'message' and len(get_user(message.chat.id)) and message.chat.id == admin_id):
        try :
            text_list = text.split()
            bot.forward_message(admin_id,int(text_list[1]) ,int(text_list[2]) )         # time.sleep(0.05)
        except:
            bot.send_message(message.chat.id,"–ù–µ–º–∞–≥—á—ã–º–∞ –∞—Ç—Ä—ã–º–∞—Ü—å –≥—ç—Ç–∞–µ –ø–∞–≤–µ–¥–∞–º–ª–µ–Ω–Ω–µ")
    elif(text == "get_data" and len(get_user(message.chat.id)) and message.chat.id == admin_id):
        users = get_users()
        result = "–°–ø—ñ—Å –ª—é–¥–∑–µ–π:" + "\n"*3
        for i in range(len(users)):
            result+= str(users[i]) + "\n"*2
        bot.send_message(admin_id,result)

    elif (text == "get_answers" and len(get_user(message.chat.id)) and message.chat.id == admin_id):
        users = get_answers()
        result = "–°–ø—ñ—Å –∞–¥–∫–∞–∑–∞—û:" + "\n"*3
        for i in range(len(users)):
            result+= str(users[i]) + "\n"*2
        bot.send_message(admin_id,result)
    else:
        if(message.chat.id == admin_id):
            bot.send_message(message.chat.id,"–í–∞—à–∞–µ –ø–∞–≤–µ–¥–∞–º–ª–µ–Ω–Ω–µ –Ω–µ –∑'—è—û–ª—è–µ—Ü—Ü–∞ –∫–∞–º–∞–Ω–¥–∞–π. –ù–∞–ø—ñ—à—ã—Ü–µ /start, –∫–∞–± –ø–∞—á–∞—Ü—å –∑–Ω–æ—û", reply_markup=kboard_admin)
        elif len(get_user(message.chat.id)):
            bot.send_message(message.chat.id,"–í–∞—à–∞–µ –ø–∞–≤–µ–¥–∞–º–ª–µ–Ω–Ω–µ –Ω–µ –∑'—è—û–ª—è–µ—Ü—Ü–∞ –∫–∞–º–∞–Ω–¥–∞–π. –ù–∞–ø—ñ—à—ã—Ü–µ /start, –∫–∞–± –ø–∞—á–∞—Ü—å –∑–Ω–æ—û", reply_markup=kboard_auth)
        else:
            bot.send_message(message.chat.id,"–í–∞—à–∞–µ –ø–∞–≤–µ–¥–∞–º–ª–µ–Ω–Ω–µ –Ω–µ –∑'—è—û–ª—è–µ—Ü—Ü–∞ –∫–∞–º–∞–Ω–¥–∞–π. –ù–∞–ø—ñ—à—ã—Ü–µ /start, –∫–∞–± –ø–∞—á–∞—Ü—å –∑–Ω–æ—û", reply_markup=kboard)



def quest_photo(message,start_id):
    # print(jsonpickle.encode(message))

    if message.content_type == "text" and message.text == "–Ø –¥–∞—Å–ª–∞—û/–ª–∞ —û—Å–µ —Ñ–æ—Ç–∞–∑–¥—ã–º–∫—ñ":
        bot.send_message(message.chat.id,"–í—ã –¥–∞—Å–ª–∞–ª—ñ —û—Å–µ —Ñ–æ—Ç–∞–∑–¥—ã–º–∫—ñ", reply_markup=kboard_auth)
        bot.send_message(admin_id,str(message.chat.id) + " –¥–∞—Å–ª–∞—û –∞–¥–∫–∞–∑ –Ω–∞ —Ç—ç—Å—Ç/–∫–≤–µ—Å—Ç")
        add_answer(get_user(message.chat.id)[0],message.chat.id,start_id+1,message.id,str(time.ctime()),get_user(message.chat.id)[3] )
    elif message.content_type == "photo":
        bot.send_message(message.chat.id,"–í–∞—à —Ñ–æ—Ç–∞–∑–¥—ã–º–∞–∫ –ø—Ä—ã–Ω—è—Ç—ã",reply_markup=kboard_photo)
        bot.register_next_step_handler(message,quest_photo,start_id)
    elif message.content_type == "text" and message.text == "–°–∫–∞—Å–∞–≤–∞—Ü—å –¥–∞—Å—ã–ª–∞–Ω–Ω–µ —Ñ–æ—Ç–∞–∑–¥—ã–º–∫–∞—û":
        bot.send_message(message.chat.id,"–î–∞—Å—ã–ª —Ñ–æ—Ç–∞–∑–¥—ã–º–∫–∞—û —Å–∫–∞—Å–æ–≤–∞–Ω—ã",reply_markup=kboard_auth)
    else:
        bot.send_message(message.chat.id,"–í—ã –¥–∞—Å–ª–∞–ª—ñ –Ω–µ —Ñ–æ—Ç–∞",reply_markup=kboard_photo)
        bot.register_next_step_handler(message,quest_photo,start_id)



@bot.callback_query_handler(func=lambda call:True)
def callback_worker(call):
    if call.data == "get_answer_from_user":
        try:
            bot.send_message(call.message.chat.id,"–í—ã –∑–Ω–∞—Ö–æ–¥–∑—ñ—Ü–µ—Å—è —û —Ä—ç–∂—ã–º–µ –¥–∞—Å—ã–ª–∞–Ω–Ω—è –≤—ã–Ω—ñ–∫–∞—û —Ç—ç—Å—Ç–∞/–∫–≤–µ—Å—Ç–∞/—ñ–Ω—à–∞–≥–∞. –î–∞—Å—ã–ª–∞–π—Ü–µ —Ñ–æ—Ç–∞–∑–¥—ã–º–∫—ñ –∑ –≤—ã–Ω—ñ–∫–∞–º—ñ, –∫–∞–ª—ñ —Å–∫–æ–Ω—á—ã—Ü–µ, –Ω–∞—Ü—ñ—Å–Ω—ñ—Ü–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω—ñ–∂—ç–π(–∫–≤–∞–¥—Ä–∞—Ü—ñ–∫)", reply_markup=kboard_photo)
            bot.register_next_step_handler(call.message,quest_photo, call.message.id)
            # print(call.message.id)
        except:
            bot.send_message(call.message.chat.id,"–î–∞—à–ª—ñ—Ü–µ —è—à—á—ç —Ä–∞–∑, –Ω–∞ –∂–∞–ª—å, —à—Ç–æ—Å—å—Ü—ñ –ø–∞–π—à–ª–æ –Ω–µ —Ç–∞–∫(")




bot.polling()